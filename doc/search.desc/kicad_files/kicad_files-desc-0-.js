searchState.loadedDescShard("kicad_files", 0, "A library to read KiCAD v6 file formats.\nAlpha Component\nReturns the absolute value of <code>self</code>.\nComputes the four quadrant arctangent of <code>self</code> and <code>other</code> in …\nBlue Component\n<strong>Board Common Syntax</strong>\n<strong>Common Syntax</strong>\nReturns the argument unchanged.\nReturns the argument unchanged.\nGreen Component\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is a helper method for creating this type. Take a …\nThis is a helper method for creating this type. You might …\nRed Component\nReturn the raw value.\nReturn the raw value.\nReturns the nearest integer to <code>self</code>. Round half-way cases …\nReturns the nearest integer to a number. Round half-way …\n<strong>Schematic File Format</strong>\n<strong>Schematic and Symbol Library Common Syntax</strong>\n<strong>Symbol Library</strong>\nThis is a helper method for creating this type. Take a …\nThis is a helper method for creating this type. You might …\nPads are not connect to zone.\nPads are connected to zone using solid fill.\nPads are connected to zone using thermal reliefs.\nOnly through hole pads are connected to zone using thermal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the attributes of the footprint.\nDefines the horizontal cost of when using the automatic …\nDefines the vertical cost of when using the automatic …\nIndicates that the footprint is only defined in the board …\nDefines the clearance to all board copper objects for all …\nDefines a string containing the description of the …\nindicates that the footprint should be excluded when …\nIndicates that the footprint position information should …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDefines the canonical layer the footprint is placed.\nDefines the link to footprint library of the footprint. …\nDefines a flag to indicate the footprint cannot be edited.\nDefines the hierarchical path of the schematic symbol …\nDefines a flag to indicate that the footprint has not been …\nThe X and Y coordinates and rotational angle of the …\nDefines the solder mask distance from all pads in the …\nDefines the solder paste distance from all pads in the …\nDefines the percentage of the pad size used to define the …\nDefines a string of search tags for the footprint.\nDefines a the last time the footprint was edited.\nDefines the distance from the pad to the zone of thermal …\nDefined the thermal relief spoke width used for zone …\nDefines the unique identifier for the footprint. This only …\nDefines the type of footprint.\nIndicates if the text orientation can be anything other …\nDefines how all pads are connected to filled zone.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPin can be both input and output.\nStyle\nStyle\nStyle\nNot internally connected.\nPin is an input.\nStyle\nStyle\nStyle\nStyle\nPin has no electrical connection.\nStyle\nPin is an open collector output.\nPin is an open emitter output.\nPin is an output.\nStyle\nPin is electrically passive.\nPin is a power input.\nPin is a power output.\nThis is basically <code>Position</code> but for some reason, KiCAD …\nPin is a tri-state output.\nPin does not have a specified electrical type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")